import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression

# Sample patient dataset
# Each row: [age, sex, cp, trestbps, chol, fbs, restecg, thalach, exang, oldpeak, slope, ca, thal]
# Labels: 0 = no heart disease, 1 = heart disease
data = [
    [63, 1, 3, 145, 233, 1, 0, 150, 0, 2.3, 0, 0, 1, 1],
    [37, 1, 2, 130, 250, 0, 1, 187, 0, 3.5, 0, 0, 2, 1],
    [41, 0, 1, 130, 204, 0, 0, 172, 0, 1.4, 2, 0, 2, 1],
    [56, 1, 1, 120, 236, 0, 1, 178, 0, 0.8, 2, 0, 2, 0],
]

columns = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs', 'restecg', 
           'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal', 'target']

df = pd.DataFrame(data, columns=columns)
X = df.drop('target', axis=1)
y = df['target']

# Train a basic logistic regression model
model = LogisticRegression()
model.fit(X, y)

def predict_heart_disease_risk(input_data):
    """
    Predict the risk of heart disease.
    :param input_data: List of patient data [age, sex, cp, trestbps, chol, fbs, restecg,
                                             thalach, exang, oldpeak, slope, ca, thal]
    :return: Probability of heart disease
    """
    input_array = np.array(input_data).reshape(1, -1)
    probability = model.predict_proba(input_array)[0][1]
    return probability

# Example usage
patient_data = [54, 1, 2, 140, 239, 0, 1, 160, 0, 1.2, 1, 0, 2]
risk = predict_heart_disease_risk(patient_data)
print(f"Predicted Heart Disease Risk: {risk * 100:.2f}%")
